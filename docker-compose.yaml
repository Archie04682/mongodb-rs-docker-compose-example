version: '3.9'
services:
  mongo1:
    image: mongo:5
    hostname: mongo1
    ports:
      - 27017:27017
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo1
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo1:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
  mongo2:
    image: mongo:5
    hostname: mongo2
    ports:
      - 27018:27017
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo2
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo2:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
  mongo3:
    image: mongo:5
    hostname: mongo3
    ports:
      - 27019:27017
    command: mongod --replSet myReplicaSet --bind_ip localhost,mongo3
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo3:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
  setupReplica:
    image: mongo:5
    command: mongosh --host mongo1 --port 27017 --eval "rs.initiate({_id:\"myReplicaSet\",members:[{_id:0,host:\"mongo1\"},{_id:2,host:\"mongo2\"},{_id:3,host:\"mongo3\"}]})"
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy
      mongo3:
        condition: service_healthy
        
    
networks:
  mongoCluster: